org: dawish
app: notery-user-management-test
service: api-notery

frameworkVersion: "3"

custom:
  wsgi:
    app: app.app
  env_file: ${file(./env/${opt:stage, 'dev'}.yml)}
  account: ${AWS::AccountId}
  confirm_email_template: ${file(./email-templates/confirm_email.html)}
  

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "textract:GetDocumentAnalysis"
            - "textract:StartDocumentAnalysis"
          Resource: "*"
        - Effect: Allow
          Action:
            - "dynamodb:GetItem"
            - "dynamodb:Query"
            - "dynamodb:Scan"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
          Resource:
            - "arn:aws:dynamodb:*:*:table/notery_microserv_dynamo_raw_data"
        - Effect: Allow
          Action:
            - "ses:SendEmail"
            - "ses:SendRawEmail"
            - "ses:SendTemplatedEmail"
          Resource: "*"
          Condition:
            StringEquals:
              "ses:FromAddress": ${self:custom.env_file.sender_email}
        - Effect: Allow
          Action:
            - "cognito-idp:AdminDeleteUser"
            - "cognito-idp:AdminDeleteUserAttributes"
            - "cognito-idp:AdminDisableUser"
            - "cognito-idp:AdminEnableUser"
            - "cognito-idp:AdminSetUserPassword"
            - "cognito-idp:AdminUpdateUserAttributes"
            - "cognito-idp:AdminRemoveUserFromGroup"
            - "cognito-idp:AdminAddUserToGroup"
            - "cognito-idp:AdminResetUserPassword"
          Resource: "*"

functions:
  cognitoAuth: 
    handler: cognito_auth.signup_handler
    events:
      - cognitoUserPool:
          pool: UserPool
          trigger: PreSignUp
  cognitoPostConfirmation:
    handler: cognito_auth.post_signup_handler
    events:
      - cognitoUserPool:
          pool: UserPool
          trigger: PostConfirmation

    
plugins:
  - serverless-wsgi
  - serverless-python-requirements  

resources:
  Resources:
    UserPool: ${file(resources/cognito.yml):UserPool}
    UserPoolClient: ${file(resources/cognito.yml):UserPoolClient}
    UserPoolDomain: ${file(resources/cognito.yml):UserPoolDomain}
    IdentityProviderFacebook: ${file(resources/cognito.yml):IdentityProviderFacebook}
    IdentityProviderGoogle: ${file(resources/cognito.yml):IdentityProviderGoogle}
    OnCognitoSignupPermission: ${file(resources/cognito.yml):OnCognitoSignupPermission}
    OnCognitoSignupSuccessPermission: ${file(resources/cognito.yml):OnCognitoSignupSuccessPermission}

   